<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.Book201809Mapper" >
    <resultMap id="BaseResultMap" type="com.example.demo.domain.Book201809" >
        <!--
          WARNING - @MybatisMapper
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="book_id" property="bookId" />
        <result column="name" property="name" />
        <result column="number" property="number" />
    </resultMap>
    <sql id="Example_Where_Clause" >
        <!--
          WARNING - @MybatisMapper
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <!--
          WARNING - @MybatisMapper
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        <!--
          WARNING - @MybatisMapper
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        book_id, name, number
    </sql>
    <select id="selectByDto" resultMap="BaseResultMap" parameterType="com.example.demo.domain.Book201809" >
        <!--
          WARNING - @MybatisMapper
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List" />
        from book_${tableName}
        <where >
            <if test="bookId != null" >
                and book_id = #{bookId}
            </if>
            <if test="name != null" >
                and name = #{name}
            </if>
            <if test="number != null" >
                and number = #{number}
            </if>
        </where>
    </select>
    <delete id="deleteByDto" parameterType="com.example.demo.domain.Book201809" >
        <!--
          WARNING - @MybatisMapper
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from book_${tableName}
        <where >
            <if test="bookId != null" >
                and book_id = #{bookId}
            </if>
            <if test="name != null" >
                and name = #{name}
            </if>
            <if test="number != null" >
                and number = #{number}
            </if>
        </where>
    </delete>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        <!--
          WARNING - @MybatisMapper
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List" />
        from book_${tableName}
        where book_id = #{bookId}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        <!--
          WARNING - @MybatisMapper
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from book_${tableName}
        where book_id = #{bookId}
    </delete>
    <insert id="insert" parameterType="com.example.demo.domain.Book201809" >
        <!--
          WARNING - @MybatisMapper
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into book_${tableName} (book_id, name, number)
        values (#{bookId}, #{name}, #{number})
    </insert>
    <insert id="insertSelective" parameterType="com.example.demo.domain.Book201809" >
        <!--
          WARNING - @MybatisMapper
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into book_${tableName}
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="bookId != null" >
                book_id,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="number != null" >
                number,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="bookId != null" >
                #{bookId},
            </if>
            <if test="name != null" >
                #{name},
            </if>
            <if test="number != null" >
                #{number},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.domain.Book201809" >
        <!--
          WARNING - @MybatisMapper
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update book_${tableName}
        <set >
            <if test="name != null" >
                name = #{name},
            </if>
            <if test="number != null" >
                number = #{number},
            </if>
        </set>
        where book_id = #{bookId}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.demo.domain.Book201809" >
        <!--
          WARNING - @MybatisMapper
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update book_${tableName}
        set name = #{name},
            number = #{number}
        where book_id = #{bookId}
    </update>
</mapper>